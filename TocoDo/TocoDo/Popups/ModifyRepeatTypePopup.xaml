<?xml version="1.0" encoding="utf-8"?>

<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
				 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
				 xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
				 xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
				 xmlns:global="clr-namespace:TocoDo.UI.Views.Global;assembly=TocoDo.UI"
				 xmlns:habits="clr-namespace:TocoDo.UI.Converters.Habits;assembly=TocoDo.UI"
				 xmlns:controls="clr-namespace:TocoDo.UI.Controls;assembly=TocoDo.UI"
				 xmlns:properties="clr-namespace:TocoDo.BusinessLogic.Properties;assembly=TocoDo.BusinessLogic"
				 xmlns:models="clr-namespace:TocoDo.BusinessLogic.DependencyInjection.Models;assembly=TocoDo.BusinessLogic"
				 xmlns:customRenderers="clr-namespace:TocoDo.UI.CustomRenderers;assembly=TocoDo.UI"
				 x:Class="TocoDo.UI.Popups.ModifyRepeatTypePopup"
				 x:Name="This">
	<pages:PopupPage.Animation>
		<animations:ScaleAnimation
			PositionIn="Center"
			PositionOut="Center"
			ScaleIn="1.2"
			ScaleOut="0.8"
			DurationIn="400"
			DurationOut="300"
			EasingIn="SinOut"
			EasingOut="SinIn"
			HasBackgroundAnimation="True" />
	</pages:PopupPage.Animation>
	<!-- Content -->
	<ContentPage.Content>
		<global:FrameWrapper Header="Repeat for..." HeaderBackgroundColor="White" HeaderTextColor="{StaticResource ColorPrimary}" Margin="35" VerticalOptions="Center">
			<StackLayout Padding="10" BindingContext="{Binding Source={x:Reference This}, Path=ViewModel}">
					<StackLayout Orientation="Horizontal" Padding="10" Spacing="15">
						<Entry Keyboard="Numeric" Text="{Binding DaysToRepeat}" WidthRequest="40" HorizontalTextAlignment="Center" />
						<controls:ResizablePicker x:Name="Picker" ItemsSource="{Binding PickValues}" SelectedItem="{Binding SelectedItem}"/>
					</StackLayout>

					<!--Week days buttons-->
					<StackLayout IsVisible="False" Orientation="Vertical" Spacing="8">
						<StackLayout.Resources>
							<ResourceDictionary>
								<habits:RepeatTypeToBoolConverter x:Key="RepeatTypeToBoolConverter" />
								<Style TargetType="controls:SelectDayButton">
									<Setter Property="BackgroundColor" Value="White" />
									<Setter Property="WidthRequest" Value="54" />
									<Setter Property="HeightRequest" Value="54" />
									<Setter Property="FontAttributes" Value="None" />
									<Setter Property="FontSize" Value="Micro" />
									<Setter Property="Command" Value="{Binding SelectDayCommand}" />
								</Style>
								<Style TargetType="StackLayout">
									<Setter Property="HorizontalOptions" Value="Center" />
									<Setter Property="VerticalOptions" Value="Center" />
									<Setter Property="Orientation" Value="Horizontal" />
									<Setter Property="Spacing" Value="8" />
								</Style>
							</ResourceDictionary>
						</StackLayout.Resources>
						<StackLayout.Triggers>
							<DataTrigger TargetType="StackLayout" Binding="{Binding Source={x:Reference Picker}, Path=SelectedIndex}"
										 Value="1">
								<Setter Property="IsVisible" Value="True" />
							</DataTrigger>
						</StackLayout.Triggers>
						<StackLayout>
							<controls:SelectDayButton Text="{x:Static properties:Resources.Mon}"
													  CommandParameter="{x:Static models:RepeatType.Mon}"
													  IsToggled="{Binding RepeatType, Converter={StaticResource RepeatTypeToBoolConverter}, ConverterParameter={x:Static models:RepeatType.Mon}, Mode=OneWay}" />

							<controls:SelectDayButton Text="{x:Static properties:Resources.Tue}"
													  RepeatType="{x:Static models:RepeatType.Tue}"
													  IsToggled="{Binding RepeatType, Converter={StaticResource RepeatTypeToBoolConverter}, ConverterParameter={x:Static models:RepeatType.Tue}, Mode=OneWay}"
													  CommandParameter="{x:Static models:RepeatType.Tue}" />

							<controls:SelectDayButton Text="{x:Static properties:Resources.Wed}"
													  RepeatType="{x:Static models:RepeatType.Wed}"
													  IsToggled="{Binding RepeatType, Converter={StaticResource RepeatTypeToBoolConverter}, ConverterParameter={x:Static models:RepeatType.Wed}, Mode=OneWay}"
													  CommandParameter="{x:Static models:RepeatType.Wed}" />

							<controls:SelectDayButton Text="{x:Static properties:Resources.Thu}"
													  RepeatType="{x:Static models:RepeatType.Thu}"
													  IsToggled="{Binding RepeatType, Converter={StaticResource RepeatTypeToBoolConverter}, ConverterParameter={x:Static models:RepeatType.Thu}, Mode=OneWay}"
													  CommandParameter="{x:Static models:RepeatType.Thu}" />
						</StackLayout>
						<StackLayout>
							<controls:SelectDayButton Text="{x:Static properties:Resources.Fri}"
													  RepeatType="{x:Static models:RepeatType.Fri}"
													  IsToggled="{Binding RepeatType, Converter={StaticResource RepeatTypeToBoolConverter}, ConverterParameter={x:Static models:RepeatType.Fri}, Mode=OneWay}"
													  CommandParameter="{x:Static models:RepeatType.Fri}" />

							<controls:SelectDayButton Text="{x:Static properties:Resources.Sat}"
													  RepeatType="{x:Static models:RepeatType.Sat}"
													  IsToggled="{Binding RepeatType, Converter={StaticResource RepeatTypeToBoolConverter}, ConverterParameter={x:Static models:RepeatType.Sat}, Mode=OneWay}"
													  CommandParameter="{x:Static models:RepeatType.Sat}" />

							<controls:SelectDayButton Text="{x:Static properties:Resources.Sun}"
													  RepeatType="{x:Static models:RepeatType.Sun}"
													  IsToggled="{Binding RepeatType, Converter={StaticResource RepeatTypeToBoolConverter}, ConverterParameter={x:Static models:RepeatType.Sun}, Mode=OneWay}"
													  CommandParameter="{x:Static models:RepeatType.Sun}" />
						</StackLayout>
					</StackLayout>
					<StackLayout Orientation="Horizontal" HorizontalOptions="End">
						<StackLayout.Resources>
							<ResourceDictionary>
								<Style TargetType="customRenderers:NoBorderButton">
									<Setter Property="WidthRequest" Value="80" />
									<Setter Property="BackgroundColor" Value="Transparent" />
									<Setter Property="HorizontalOptions" Value="End" />
								</Style>
							</ResourceDictionary>
						</StackLayout.Resources>
						<customRenderers:NoBorderButton Text="Cancel" TextColor="Gray" Command="{Binding CancelCommand}" />
						<customRenderers:NoBorderButton Text="Done" TextColor="Blue" Command="{Binding ApplyAndPopCommand}" />
					</StackLayout>
				</StackLayout>
			</global:FrameWrapper>
	</ContentPage.Content>
</pages:PopupPage>